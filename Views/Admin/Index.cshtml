@using ProjectStudentSystem.Models
@model List<ProjectStudentSystem.Models.AddStudent>

@{
    ViewBag.Title = "Student List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    // var pager = new ProjectStudentSystem.Models.Pager();
    ViewData["Title"] = "Index";
    Pager pager = new Pager();
    int pageNo = 0;
    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student List</title>

    <style>
        body {
            background-color: #1a1a1a;
            color: #ffffff;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        h2 {
            color: white;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

            .table th {
                background-color: #333;
                color: #fff;
                padding: 10px;
                text-align: left;
            }

            .table td {
                border: 1px solid #ddd;
                padding: 8px;
            }

            .table tbody tr:nth-child(even) {
                background-color: #2c2c2c;
            }

            .table td a {
                color: #007bff;
                text-decoration: none;
                margin-right: 10px;
            }

                .table td a:hover {
                    text-decoration: underline;
                }



        /* Pagination Styles */
        /* Pagination Styles */
        /* Pagination Styles */
        .container {
            margin-top: 20px;
        }

        .pagination {
            display: flex;
            justify-content: flex-end;
            list-style: none;
            padding: 0;
        }

            .pagination li {
                margin: 0 5px;
            }

            .pagination a,
            .pagination span {
                display: inline-block;
                padding: 8px 16px;
                text-decoration: none;
                color: white;
                background-color: #8d8686;
                border: 1px solid #ccc;
                border-radius: 4px;
            }

                .pagination a:hover {
                    background-color: #8d8686; /* Keep the same background color as normal state */
                    color: white; /* Text color for hover state */
                }

            .pagination .active a {
                background-color: #333;
                color: white;
            }

                .pagination .active a:hover {
                    background-color: #333; /* Keep the same background color as normal state */
                    color: white; /* Text color for hover state */
                }

        /* Styles for the dropdown */
        .dropdown-container {
            margin-top: 10px;
            margin-bottom: 20px;
        }

        label {
            margin-right: 10px;
            font-weight: bold;
            color: #ffffff;
        }

        #pageSizeDropdown {
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: #2c2c2c;
            color: #ffffff;
            cursor: pointer;
        }

            #pageSizeDropdown option {
                background-color: #2c2c2c;
                color: #ffffff;
            }

        .Dash {
            background-color: #bd2525;
            color: white;
            padding: 1px;
        }

            .Dash h2 a {
                text-decoration: none; /* Remove underline */
                color: white; /* Change link color to blue (you can use any color code or name) */
            }
    </style>


</head>
<body>

    <div class="Dash">
        <h2>
            <a href="/Dashboard/Index">Dashboard</a>
            <span> | </span>
            <a href="/Admin/Index">Student List</a>
            <span> | </span>
            <a href="/AddStudent/AddStudent">Add Student</a>
        </h2>
    </div>

    <table class="table">
        <thead>
            <tr>
                @foreach (var column in new[] { "Full Name", "Roll No", "Email", "Gender", "Date of Birth", "City", "Interest", "Department", "Degree Title", "Subject", "Start Date", "End Date" })
                {
                    <th onclick="sortColumn('@column.Replace(" ", "")')">
                        @column
                        <span>▲▼</span>
                    </th>
                }
                              
                <th>Actions</th> 
            </tr>
        </thead>
        <tbody>
            @foreach (var student in Model)
            {
                <tr>
                    <td>@student.FullName</td>
                    <td>@student.RollNo</td>
                    <td>@student.Email</td>
                    <td>@student.Gender</td>
                    <td>@student.DateOfBirth.ToString("MM/dd/yyyy")</td>
                    <td>@student.City</td>
                    <td>@student.Interest</td>
                    <td>@student.Department</td>
                    <td>@student.DegreeTitle</td>
                    <td>@student.Subject</td>
                    <td>@student.StartDate.ToString("MM/dd/yyyy")</td>
                    <td>@student.EndDate.ToString("MM/dd/yyyy")</td>
                    <td>
                        <a href="@Url.Action("ViewDetail", "Admin", new { id = student.Id })">View</a> |
                        <a href="@Url.Action("EditStudent", "Admin", new { id = student.Id })">Edit</a> |
                        <a href="@Url.Action("DeleteStudent", "Admin", new { id=student.Id })">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="dropdown-container" method="post" action="/Admin/Index">
        <label for="pageSizeDropdown">Page Size:</label>
        <select id="pageSizeDropdown" onchange="changePageSize(this)">
            <option value="5" @(pager.PageSize == 5 ? "selected" : "")>5</option>
            <option value="10" @(pager.PageSize == 10 ? "selected" : "")>10</option>
            <option value="20" @(pager.PageSize == 20 ? "selected" : "")>20</option>
            <option value="30" @(pager.PageSize == 30 ? "selected" : "")>30</option>
            <option value="50" @(pager.PageSize == 50 ? "selected" : "")>50</option>
        </select>
    </div>
    <script>
        function changePageSize(dropdown) {
            var selectedPageSize = dropdown.value;
            var currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set("pageSize", selectedPageSize);
            currentUrl.searchParams.set("pg", 1); // Set page number to 1
            window.location.href = currentUrl.href;
        }
    </script>



    <script>
        function sortColumn(columnName) {
            var currentUrl = new URL(window.location.href);
            var sortOrder = "asc";

            if (columnName === currentUrl.searchParams.get("sortColumn") && currentUrl.searchParams.get("sortOrder") === "asc") {
                sortOrder = "desc";
            }

            var newUrl = currentUrl.origin + currentUrl.pathname +
                "?sortColumn=" + columnName +
                "&sortOrder=" + sortOrder +
                "&pg=" + @ViewBag.Pager.CurrentPage +
                "&pageSize=" + @ViewBag.Pager.PageSize;

            window.location.href = newUrl;
        }
    </script>


    <div class="container" style="height:150px">
        @if (pager.TotalPages > 0)
        {
            <ul class="pagination justify-content-end">

                @if (pager.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", "Admin", new { pg = 1, pageSize = pager.PageSize })">First</a>

                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", "Admin", new { pg = pager.CurrentPage - 1,pageSize = pager.PageSize })">Previous</a>
                    </li>
                }

                @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
                {
                    <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", "Admin", new { pg = pge ,pageSize = pager.PageSize})">@pge</a>
                    </li>
                }


                @if (pager.CurrentPage < pager.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", "Admin", new { pg = pager.CurrentPage + 1,pageSize = pager.PageSize })">Next</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", "Admin", new { pg = pager.TotalPages,pageSize = pager.PageSize })">Last</a>
                    </li>
                }

            </ul>
        }
    </div>






</body>
</html>
